theme(text = element_text(family = "Symbola"))
)
update_geom_defaults(
"text",
list(
family = "Symbola"
)
)
update_geom_defaults(
"label",
list(family = "Symbola")
)
df <- read.csv("../data/processed/customer_churn_data_clean.csv")
# Drop index/ID columns; keep the rest from your schema
df_use <- df |>
select(-X, -CustomerID)  # keep Churn, Age, Tenure, PhoneService, InternetService, Contract, MonthlyCharges, TotalCharges
print_table(
summarize_df(df_use),
caption = "Summary of the Dataset",
name_style = "pretty"
)
df_use |>
sample_n(10) |>
print_table(
caption = "Random 10 samples from the dataset",
name_style = "pretty"
)
num_cols <- df_use |>
select(where(is.numeric))
num_long <- num_cols |>
pivot_longer(everything(), names_to = "feature", values_to = "value")
ggplot(num_long, aes(value)) +
geom_histogram(bins = 30, fill = "#4C78A8", alpha = 0.85, color = "white") +
facet_wrap(~feature, scales = "free", ncol = 2) +
labs(
x = NULL, y = "Count"
)
cat_cols <- df_use |>
select(where(~ is.character(.x) || is.factor(.x))) |>
select(-Churn)  # analyze service mix separately from the label
cat_long <- cat_cols |>
mutate(across(everything(), ~ fct_lump_n(factor(.x), n = 8, other_level = "Other"))) |>
pivot_longer(everything(), names_to = "feature", values_to = "level") |>
drop_na(level)
ggplot(cat_long, aes(level)) +
geom_bar(fill = "#72B7B2") +
facet_wrap(~ feature, scales = "free_y", ncol = 2) +
coord_flip() +
labs(x = NULL, y = "Count")
cat_long_churn <- df_use |>
select(Churn, where(~ is.character(.x) || is.factor(.x))) |>
mutate(across(-Churn, ~ fct_lump_n(factor(.x), n = 6, other_level = "Other"))) |>
pivot_longer(-Churn, names_to = "feature", values_to = "level") |>
drop_na(level, Churn)
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_y", ncol = 2) +
coord_flip() +
scale_y_continuous(labels = scales::percent) +
labs(x = NULL, y = "Percent", fill = "Churn")
missing_df <- df_use |>
summarise(across(everything(), ~ sum(is.na(.)))) |>
pivot_longer(everything(), names_to = "feature", values_to = "n_missing") |>
mutate(pct = n_missing / nrow(df_use))
ggplot(missing_df, aes(reorder(feature, pct), pct)) +
geom_col(fill = "#E45756") +
coord_flip() +
scale_y_continuous(labels = scales::percent) +
labs(title = "Missing Values by Feature", x = NULL, y = "Percent Missing")
num_long |>
group_by(feature) |>
summarise(
n = sum(!is.na(value)),
mean = mean(value, na.rm = TRUE),
median = median(value, na.rm = TRUE),
sd = sd(value, na.rm = TRUE),
p99 = quantile(value, 0.99, na.rm = TRUE),
skew_hint = case_when(
median < mean ~ "Right-skewed",
median > mean ~ "Left-skewed",
TRUE ~ "Roughly symmetric"
)
) |>
arrange(desc(abs(mean - median))) |>
print_table(caption = "Skewness")
p_age     <- make_skew_plot(df, "Age")
p_tenure  <- make_skew_plot(df, "Tenure")
p_monthly <- make_skew_plot(df, "MonthlyCharges")
p_total   <- make_skew_plot(df, "TotalCharges")
p_age; p_tenure; p_monthly; p_total
# Select the categorical features of interest
cat_features <- c("Gender", "PhoneService", "InternetService", "Contract")
cat_long_churn <- df_use %>%
select(Churn, all_of(cat_features)) %>%
pivot_longer(-Churn, names_to = "feature", values_to = "level") %>%
drop_na(level, Churn)
cat_long_churn |>
sample_n(5) |>
print_table(
caption = "Categorical features of interest",
name_style = "pretty"
)
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "stack") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
labs(
title = "Categorical Balances by Churn (Counts)",
x = NULL, y = "Count", fill = "Churn"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Categorical Balances by Churn (Proportions)",
x = NULL, y = "Percent", fill = "Churn"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
#| label: helpers
# Ensure types
df_use <- df_use %>%
mutate(
Churn = factor(Churn, levels = c("No","Yes")),
Contract = factor(Contract),
InternetService = factor(InternetService)
)
# Generic helper: churn rate + 95% CI by categorical feature
# Because churn rate is an estimate from data, we add 95%
# confidence interval using the Wilson method.
churn_rate_by <- function(data, feature) {
f <- enquo(feature)
data %>%
group_by(!!f) %>%
summarise(
churn_yes = sum(Churn == "Yes", na.rm = TRUE),
n = n(),
.groups = "drop"
) %>%
mutate(ci = map2(churn_yes, n, prop_ci_wilson)) %>%
tidyr::unnest_wider(ci) %>%
rename(level = !!f)
}
# Small effect-size helpers
cramer_v <- function(tab) {
chi2 <- suppressWarnings(chisq.test(tab)$statistic)
n <- sum(tab); k <- min(nrow(tab), ncol(tab))
as.numeric(sqrt(chi2 / (n * (k - 1))))
}
cohens_d <- function(x, y) {
m1 <- mean(x, na.rm=TRUE); m2 <- mean(y, na.rm=TRUE)
s1 <- sd(x, na.rm=TRUE);  s2 <- sd(y, na.rm=TRUE)
n1 <- sum(!is.na(x));     n2 <- sum(!is.na(y))
s_p <- sqrt(((n1-1)*s1^2 + (n2-1)*s2^2) / (n1 + n2 - 2))
(m2 - m1) / s_p
}
# convert Tenure into a categorical `bin` variable
df_tenure <- df_use %>%
mutate(
tenure_bin = cut(
Tenure,
breaks = c(0, 6, 12, 24, 48, Inf),
labels = c("0–6", "6–12", "12–24", "24–48", "48+"),
right = TRUE,
include.lowest = TRUE
)
)
# now each customer is tagged with a tenure_bin value (e.g., "0-6")
df_tenure |>
select(Gender, Age, Contract, tenure_bin) |>
sample_n(5) |>
print_table(
caption = "Data Frame with Tenure Bin tags",
name_style = "pretty"
)
# pass df_tenure into churn_rate_by
tenure_stats <- churn_rate_by(df_tenure, tenure_bin)
tenure_stats |>
print_table(caption = "Tenure statistics", name_style = "none")
# plot
ggplot(tenure_stats, aes(x = level, y = p)) +
geom_col(fill = "#4C78A8", alpha = 0.9) +
geom_errorbar(aes(ymin = p_lo, ymax = p_hi), width = 0.15) +
# Add churn % labels above bars
geom_text(
aes(label = scales::percent(p, accuracy = 1)),
vjust = -1,               # position slightly above bar
hjust = 1.25,
size = 4,
) +
scale_y_continuous(labels = scales::percent,
expand = expansion(mult = c(0, 0.1))) +
labs(
title = "Churn Rate by Tenure Bin (95% CI)",
x = "Tenure (months)", y = "Churn rate"
)
df_use |>
group_by(Contract, Churn) |>
summarise(n = n(), .groups = "drop") |>
group_by(Contract) |>
mutate(prop = n / sum(n)) |>
ggplot(aes(x = Contract, y = prop, fill = Churn)) +
geom_col(position = "dodge") +
geom_text(aes(label = scales::percent(prop, accuracy = 0.1)),
position = position_dodge(width = 0.9), vjust = -0.25, size = 3) +
scale_y_continuous(labels = scales::percent) +
labs(title = "Churn Proportion by Contract Type",
x = "Contract Type", y = "Proportion")
df_use |>
group_by(InternetService, Churn) |>
summarise(n = n(), .groups = "drop") |>
group_by(InternetService) |>
mutate(prop = n / sum(n)) |>
ggplot(aes(x = InternetService, y = prop, fill = Churn)) +
geom_col(position = "dodge") +
geom_text(aes(label = scales::percent(prop, accuracy = 0.1)),
position = position_dodge(width = 0.9), vjust = -0.25, size = 3) +
scale_y_continuous(labels = scales::percent) +
labs(title = "Churn Proportion by Internet Service",
x = "Internet Service", y = "Proportion")
num_long_churn <- df_use |>
select(Churn, where(is.numeric)) |>
pivot_longer(-Churn, names_to = "feature", values_to = "value") |>
drop_na(value)
ggplot(num_long_churn, aes(value, fill = Churn)) +
geom_density(alpha = 0.35) +
facet_wrap(~feature, scale = "free", ncol = 2) +
labs(
x = NULL,
y = "Density",
fill = "Churn"
)
ggplot(num_long_churn, aes(x = Churn, y = value, fill = Churn)) +
geom_boxplot(outlier.alpha = 0.25, width = 0.7) +
facet_wrap(~ feature, scales = "free_y", ncol = 2) +
labs(x = NULL, y = NULL) +
guides(fill = "none")
ggplot(num_long_churn, aes(x = Churn, y = value, fill = Churn)) +
geom_violin(outlier.alpha = 0.25, width = 0.7) +
facet_wrap(~ feature, scales = "free_y", ncol = 2) +
labs(x = NULL, y = NULL) +
guides(fill = "none")
df_use_3 <- df |>
mutate(
AgeGroup = cut(
Age,
breaks = c(18, 30, 50, 80),
labels = c("<30", "30-50", "50+")
)
)
df_use_3 |>
sample_n(5) |>
print_table()
df_use_3 |>
ggplot(aes(x = Tenure, fill = Churn)) +
geom_density(alpha = 0.5) +
facet_wrap(~ AgeGroup) +
labs(title = "Tenure Distribution by Age Group and Churn")
# Dynamic breaks that cover full data
age_breaks <- seq(floor(min(df$age)), ceiling(max(df$age)), by = 10)
# Dynamic breaks that cover full data
age_breaks <- seq(floor(min(df$Age)), ceiling(max(df$Age)), by = 10)
tenure_breaks <- c(0, 6, 12, 24, 48, 72, Inf)  # Inf ensures top values included
heatmap_data <- df %>%
mutate(
age_bin = cut(age, breaks = age_breaks, include.lowest = TRUE, right = FALSE),
tenure_bin = cut(tenure, breaks = tenure_breaks, include.lowest = TRUE, right = FALSE)
) %>%
group_by(age_bin, tenure_bin) %>%
summarise(churn_rate = mean(Churn == "Yes"), .groups = "drop")
# Dynamic breaks that cover full data
age_breaks <- seq(floor(min(df$Age)), ceiling(max(df$Age)), by = 10)
tenure_breaks <- c(0, 6, 12, 24, 48, 72, Inf)  # Inf ensures top values included
heatmap_data <- df %>%
mutate(
AgeBin = cut(Age, breaks = age_breaks, include.lowest = TRUE, right = FALSE),
TenureBin = cut(Tenure, breaks = tenure_breaks, include.lowest = TRUE, right = FALSE)
) %>%
group_by(age_bin, tenure_bin) %>%
summarise(churn_rate = mean(Churn == "Yes"), .groups = "drop")
# Dynamic breaks that cover full data
age_breaks <- seq(floor(min(df$Age)), ceiling(max(df$Age)), by = 10)
tenure_breaks <- c(0, 6, 12, 24, 48, 72, Inf)  # Inf ensures top values included
heatmap_data <- df %>%
mutate(
AgeBin = cut(Age, breaks = age_breaks, include.lowest = TRUE, right = FALSE),
TenureBin = cut(Tenure, breaks = tenure_breaks, include.lowest = TRUE, right = FALSE)
) %>%
group_by(AgeBin, TenureBin) %>%
summarize(ChurnRate = mean(Churn == "Yes"), .groups = "drop")
heatmap_data |>
sample_n(5) |>
print_table()
# Dynamic breaks that cover full data
age_breaks <- seq(floor(min(df$Age)), ceiling(max(df$Age)), by = 10)
tenure_breaks <- c(0, 6, 12, 24, 48, 72, Inf)  # Inf ensures top values included
heatmap_data <- df %>%
mutate(
AgeBin = cut(Age, breaks = age_breaks, include.lowest = TRUE, right = FALSE),
TenureBin = cut(Tenure, breaks = tenure_breaks, include.lowest = TRUE, right = FALSE)
) %>%
group_by(AgeBin, TenureBin) %>%
summarize(ChurnRate = mean(Churn == "Yes"), .groups = "drop")
colSum(is.na(heatmap_data))
# Dynamic breaks that cover full data
age_breaks <- seq(floor(min(df$Age)), ceiling(max(df$Age)), by = 10)
tenure_breaks <- c(0, 6, 12, 24, 48, 72, Inf)  # Inf ensures top values included
heatmap_data <- df %>%
mutate(
AgeBin = cut(Age, breaks = age_breaks, include.lowest = TRUE, right = FALSE),
TenureBin = cut(Tenure, breaks = tenure_breaks, include.lowest = TRUE, right = FALSE)
) %>%
group_by(AgeBin, TenureBin) %>%
summarize(ChurnRate = mean(Churn == "Yes"), .groups = "drop")
colSums(is.na(heatmap_data))
heatmap_data |>
sample_n(5) |>
print_table()
# Dynamic breaks that cover full data
age_breaks <- seq(floor(min(df$Age)), ceiling(max(df$Age)), by = 10)
tenure_breaks <- c(0, 6, 12, 24, 48, 72, Inf)  # Inf ensures top values included
heatmap_data <- df %>%
mutate(
AgeBin = cut(Age, breaks = age_breaks, include.lowest = TRUE, right = TRUE),
TenureBin = cut(Tenure, breaks = tenure_breaks, include.lowest = TRUE, right = TRUE)
) %>%
group_by(AgeBin, TenureBin) %>%
summarize(ChurnRate = mean(Churn == "Yes"), .groups = "drop")
colSums(is.na(heatmap_data))
heatmap_data |>
sample_n(5) |>
print_table()
heatmap_data |>
sample_n(5) |>
print_table()
# Dynamic breaks that cover full data
age_breaks <- seq(floor(min(df$Age)), ceiling(max(df$Age)), by = 10)
tenure_breaks <- c(0, 6, 12, 24, 48, 72, Inf)  # Inf ensures top values included
heatmap_data <- df %>%
mutate(
AgeBin = cut(Age, breaks = age_breaks, include.lowest = TRUE, right = TRUE),
TenureBin = cut(Tenure, breaks = tenure_breaks, include.lowest = TRUE, right = TRUE)
) %>%
group_by(AgeBin, TenureBin) %>%
summarize(ChurnRate = mean(Churn == "Yes"), .groups = "drop")
heatmap_data |>
sample_n(5) |>
print_table()
# Dynamic breaks that cover full data
age_breaks <- c(seq(floor(min(df_clean$age_num, na.rm=TRUE)/10)*10,
ceiling(max(df_clean$age_num, na.rm=TRUE)/10)*10,
by = 10),
Inf)
# Dynamic breaks that cover full data
age_breaks <- c(seq(floor(min(df_use$age_num, na.rm=TRUE)/10)*10,
ceiling(max(df_use$age_num, na.rm=TRUE)/10)*10,
by = 10),
Inf)
# Dynamic breaks that cover full data
age_breaks <- seq(floor(min(df$Age)), ceiling(max(df$Age)), by = 10)
tenure_breaks <- c(0, 6, 12, 24, 48, 72, Inf)  # Inf ensures top values included
heatmap_data <- df %>%
mutate(
AgeBin = cut(Age, breaks = age_breaks, include.lowest = TRUE, right = TRUE),
TenureBin = cut(Tenure, breaks = tenure_breaks, include.lowest = TRUE, right = TRUE)
) %>%
group_by(AgeBin, TenureBin) %>%
summarize(ChurnRate = mean(Churn == "Yes"), .groups = "drop")
colSums(is.na(heatmap_data))
heatmap_data |>
sample_n(5) |>
print_table()
# Dynamic breaks that cover full data
age_breaks <- seq(floor(min(df$Age)), ceiling(max(df$Age)), by = 10)
tenure_breaks <- c(0, 6, 12, 24, 48, 72, Inf)  # Inf ensures top values included
heatmap_data <- df %>%
mutate(
AgeBin = cut(Age, breaks = age_breaks, include.lowest = TRUE, right = FALSE),
TenureBin = cut(Tenure, breaks = tenure_breaks, include.lowest = TRUE, right = FALSE)
) %>%
group_by(AgeBin, TenureBin) %>%
summarize(ChurnRate = mean(Churn == "Yes"), .groups = "drop")
heatmap_data |>
sample_n(5) |>
print_table()
heatmap_data |>
ggplot(aes(x = TenureBin, y = AgeBin, fill = ChurnRate)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "white", high = "red") +
labs(title = "Churn Rate Heattmap by Age x Tenure", fill = "Churn Rate")
df_use_3 <- df_clean |>
mutate(
AgeGroup = cut(
Age,
breaks = c(18, 30, 50, 80),
labels = c("<30", "30-50", "50+")
)
)
df_use_3 <- df_use |>
mutate(
AgeGroup = cut(
Age,
breaks = c(18, 30, 50, 80),
labels = c("<30", "30-50", "50+")
)
)
df_use_3 |>
sample_n(5) |>
print_table()
df_use_3 |>
ggplot(aes(x = Tenure, fill = Churn)) +
geom_density(alpha = 0.5) +
facet_wrap(~ AgeGroup) +
labs(title = "Tenure Distribution by Age Group and Churn")
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "stack") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
labs(
title = "Categorical Balances by Churn (Counts)",
x = NULL, y = "Count", fill = "Churn"
) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Categorical Balances by Churn (Proportions)",
x = NULL, y = "Percent", fill = "Churn"
) +
theme(axis.text.x = element_text(angle = 20, hjust = 1, vjust = 2))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Categorical Balances by Churn (Proportions)",
x = NULL, y = "Percent", fill = "Churn"
) +
theme(axis.text.x = element_text(angle = 20, hjust = 2, vjust = 2))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Categorical Balances by Churn (Proportions)",
x = NULL, y = "Percent", fill = "Churn"
) +
theme(axis.text.x = element_text(angle = 20, hjust = 1, vjust = -1))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Categorical Balances by Churn (Proportions)",
x = NULL, y = "Percent", fill = "Churn"
) +
theme(axis.text.x = element_text(angle = 20, hjust = 1, vjust = -0.25))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Categorical Balances by Churn (Proportions)",
x = NULL, y = "Percent", fill = "Churn"
) +
theme(axis.text.x = element_text(angle = 20, hjust = 1, vjust = -0.05))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Categorical Balances by Churn (Proportions)",
x = NULL, y = "Percent", fill = "Churn"
) +
theme(axis.text.x = element_text(angle = 20, hjust = 2))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Categorical Balances by Churn (Proportions)",
x = NULL, y = "Percent", fill = "Churn"
) +
theme(axis.text.x = element_text(angle = 20, hjust = 0.5))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "stack") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
labs(
title = "Categorical Balances by Churn (Counts)",
x = NULL, y = "Count", fill = "Churn"
) +
theme(axis.text.x = element_text(angle = 20, hjust = 0.5))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "stack") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
labs(
title = "Categorical Balances by Churn (Counts)",
x = NULL, y = "Count", fill = "Churn"
) +
theme(axis.text.x = element_text(angle = 20, hjust = 0.5, vjust = 0.1))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Categorical Balances by Churn (Proportions)",
x = NULL, y = "Percent", fill = "Churn"
) +
theme(axis.text.x = element_text(angle = 20, hjust = 0.5, vjust = 0.1))
