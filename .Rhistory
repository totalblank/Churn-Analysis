subtitle = "Red = Mean, Blue = Median",
x = NULL, y = "Density",
color = "Statistic", linetype = "Statistic"
) +
scale_color_manual(values = c("Mean" = "red", "Median" = "blue")) +
scale_linetype_manual(values = c("Mean" = "dashed", "Median" = "dotted")) +
coord_cartesian(clip = "off") +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom",
plot.margin = margin(10, 20, 10, 10))
make_skew_plot <- function(df, feature) {
num_long <- df %>%
select({{feature}}) %>%
pivot_longer(everything(), names_to = "feature", values_to = "value")
# mean/median
stats_lines <- num_long %>%
summarise(
mean_val   = mean(value, na.rm = TRUE),
median_val = median(value, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_longer(c(mean_val, median_val),
names_to = "stat_type",
values_to = "xintercept") %>%
mutate(stat_type = recode(stat_type,
mean_val = "Mean",
median_val = "Median"),
feature = as.character(feature))
# skew label
stats_labels <- num_long %>%
summarise(
mean_val = mean(value, na.rm = TRUE),
median_val = median(value, na.rm = TRUE),
sd_val = sd(value, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(
skew_coef = ifelse(is.na(sd_val) | sd_val == 0, NA_real_, 3 * (mean_val - median_val) / sd_val),
skew_dir  = case_when(
mean_val > median_val ~ "Right-skewed",
mean_val < median_val ~ "Left-skewed",
TRUE ~ "Symmetric"
),
label = ifelse(is.na(skew_coef),
skew_dir,
paste0(skew_dir, "\nSkew ≈ ", sprintf("%.2f", skew_coef))),
x = Inf, y = Inf,
feature = as.character(feature)
)
ggplot(num_long, aes(x = value)) +
geom_density(fill = "#4C78A8", alpha = 0.3) +
geom_vline(data = stats_lines,
aes(xintercept = xintercept, color = stat_type, linetype = stat_type),
size = 0.9) +
geom_text(data = stats_labels, aes(x = x, y = y, label = label),
hjust = 1.05, vjust = 1.3, size = 3.5, inherit.aes = FALSE) +
labs(title = paste("Skewness Check:", feature),
x = NULL, y = NULL,
color = "Statistic", linetype = "Statistic") +
scale_color_manual(values = c("Mean" = "red", "Median" = "blue")) +
scale_linetype_manual(values = c("Mean" = "dashed", "Median" = "dotted")) +
coord_cartesian(clip = "off") +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom",
plot.margin = margin(10, 20, 10, 10))
}
# Generate separate plots
p_age     <- make_skew_plot(df, Age)
make_skew_plot <- function(df, feature) {
v <- df[[feature]]
d <- data.frame(value = v)
m   <- mean(v, na.rm = TRUE)
med <- median(v, na.rm = TRUE)
sdv <- sd(v, na.rm = TRUE)
skew <- if (is.na(sdv) || sdv == 0) NA_real_ else 3 * (m - med) / sdv
dir  <- if (m > med) "Right-skewed" else if (m < med) "Left-skewed" else "Symmetric"
label <- if (is.na(skew)) dir else sprintf("%s\nSkew ≈ %.2f", dir, skew)
lines <- data.frame(
stat_type  = c("Mean", "Median"),
xintercept = c(m, med)
)
ggplot(d, aes(value)) +
geom_density(fill = "#4C78A8", alpha = 0.3) +
geom_vline(
data = lines,
aes(xintercept = xintercept, color = stat_type, linetype = stat_type),
size = 0.9
) +
annotate("text", x = Inf, y = Inf, label = label, hjust = 1.05, vjust = 1.3, size = 3.5) +
labs(title = paste("Skewness:", feature), x = NULL, y = NULL,
color = "Statistic", linetype = "Statistic") +
scale_color_manual(values = c(Mean = "red", Median = "blue")) +
scale_linetype_manual(values = c(Mean = "dashed", Median = "dotted")) +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom", plot.margin = margin(10, 20, 10, 10))
}
# Examples (separate plots):
p_age     <- make_skew_plot(df, "Age")
p_tenure  <- make_skew_plot(df, "Tenure")
p_monthly <- make_skew_plot(df, "MonthlyCharges")
p_total   <- make_skew_plot(df, "TotalCharges")
p_age; p_tenure; p_monthly; p_total
df <- read.csv("../data/processed/customer_churn_data_clean.csv")
head(df); names(df);
df <- read.csv("../data/processed/customer_churn_data_clean.csv")
c(head(df), names(df))
df <- read.csv("../data/processed/customer_churn_data_clean.csv")
names(df)
make_skew_plot <- function(df, feature) {
v <- df[[feature]]
d <- data.frame(value = v)
m   <- mean(v, na.rm = TRUE)
med <- median(v, na.rm = TRUE)
sdv <- sd(v, na.rm = TRUE)
skew <- if (is.na(sdv) || sdv == 0) NA_real_ else 3 * (m - med) / sdv
dir  <- if (m > med) "Right-skewed" else if (m < med) "Left-skewed" else "Symmetric"
label <- if (is.na(skew)) dir else sprintf("%s\nSkew ≈ %.2f", dir, skew)
lines <- data.frame(
stat_type  = c("Mean", "Median"),
xintercept = c(m, med)
)
ggplot(d, aes(value)) +
geom_density(fill = "#4C78A8", alpha = 0.3) +
geom_vline(
data = lines,
aes(xintercept = xintercept, color = stat_type, linetype = stat_type),
size = 0.9
) +
annotate("text", x = Inf, y = Inf, label = label, hjust = 1.05, vjust = 1.3, size = 3.5) +
labs(title = paste("Skewness:", feature), x = NULL, y = NULL,
color = "Statistic", linetype = "Statistic") +
scale_color_manual(values = c(Mean = "red", Median = "blue")) +
scale_linetype_manual(values = c(Mean = "dashed", Median = "dotted")) +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom", plot.margin = margin(10, 20, 10, 10))
}
# Examples (separate plots):
p_age     <- make_skew_plot(df, "Age")
p_tenure  <- make_skew_plot(df, "Tenure")
p_monthly <- make_skew_plot(df, "MonthlyCharges")
p_total   <- make_skew_plot(df, "TotalCharges")
p_age; p_tenure; p_monthly; p_total
# Select the categorical features of interest
cat_features <- c("Gender", "PhoneService", "InternetService", "Contract")
cat_long_churn <- df_use %>%
select(Churn, all_of(cat_features)) %>%
pivot_longer(-Churn, names_to = "feature", values_to = "level") %>%
drop_na(level, Churn)
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "stack") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
labs(
title = "Categorical Balances by Churn (Counts)",
x = NULL, y = "Count", fill = "Churn"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Categorical Balances by Churn (Proportions)",
x = NULL, y = "Percent", fill = "Churn"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
library(tidyverse)
theme_set(theme_minimal(base_size = 12))
# Drop index/ID columns; keep the rest from your schema
df_use <- df |>
select(-X, -CustomerID)  # keep Churn, Age, Tenure, PhoneService, InternetService, Contract, MonthlyCharges, TotalCharges
# Ensure churn is a factor with "No/Yes" levels per schema
df_use <- df_use |>
mutate(Churn = factor(Churn, levels = c("No","Yes")))
df <- read.csv("../data/processed/customer_churn_data_clean.csv")
names(df)
num_cols <- df_use |>
select(where(is.numeric))
num_long <- num_cols |>
pivot_longer(everything(), names_to = "feature", values_to = "value")
ggplot(num_long, aes(value)) +
geom_histogram(bins = 30, fill = "#4C78A8", alpha = 0.85, color = "white") +
facet_wrap(~feature, scales = "free", ncol = 2) +
labs(
title = "Numberic Feature Distributions",
subtitle = "Age, Tenure, MonthlyCharges, TotalCharges",
x = NULL, y = "Count"
)
num_long_churn <- df_use |>
select(Churn, where(is.numeric)) |>
pivot_longer(-Churn, names_to = "feature", values_to = "value") |>
drop_na(value)
ggplot(num_long_churn, aes(value, fill = Churn)) +
geom_density(alpha = 0.35) +
facet_wrap(~feature, scale = "free", ncol = 2) +
labs(
title = "Numeric Densities by Churn",
x = NULL,
y = "Density",
fill = "Churn"
)
ggplot(num_long_churn, aes(x = Churn, y = value, fill = Churn)) +
geom_boxplot(outlier.alpha = 0.25, width = 0.7) +
facet_wrap(~ feature, scales = "free_y", ncol = 2) +
labs(title = "Numeric Spread & Outliers by Churn", x = NULL, y = NULL) +
guides(fill = "none")
cat_cols <- df_use |>
select(where(~ is.character(.x) || is.factor(.x))) |>
select(-Churn)  # analyze service mix separately from the label
cat_long <- cat_cols |>
mutate(across(everything(), ~ fct_lump_n(factor(.x), n = 8, other_level = "Other"))) |>
pivot_longer(everything(), names_to = "feature", values_to = "level") |>
drop_na(level)
ggplot(cat_long, aes(level)) +
geom_bar(fill = "#72B7B2") +
facet_wrap(~ feature, scales = "free_y", ncol = 2) +
coord_flip() +
labs(title = "Categorical Feature Counts", x = NULL, y = "Count")
cat_long_churn <- df_use |>
select(Churn, where(~ is.character(.x) || is.factor(.x))) |>
mutate(across(-Churn, ~ fct_lump_n(factor(.x), n = 6, other_level = "Other"))) |>
pivot_longer(-Churn, names_to = "feature", values_to = "level") |>
drop_na(level, Churn)
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_y", ncol = 2) +
coord_flip() +
scale_y_continuous(labels = scales::percent) +
labs(title = "Categorical Proportions by Churn", x = NULL, y = "Percent", fill = "Churn")
missing_df <- df_use |>
summarise(across(everything(), ~ sum(is.na(.)))) |>
pivot_longer(everything(), names_to = "feature", values_to = "n_missing") |>
mutate(pct = n_missing / nrow(df_use))
ggplot(missing_df, aes(reorder(feature, pct), pct)) +
geom_col(fill = "#E45756") +
coord_flip() +
scale_y_continuous(labels = scales::percent) +
labs(title = "Missing Values by Feature", x = NULL, y = "Percent Missing")
num_long |>
group_by(feature) |>
summarise(
n = sum(!is.na(value)),
mean = mean(value, na.rm = TRUE),
median = median(value, na.rm = TRUE),
sd = sd(value, na.rm = TRUE),
p99 = quantile(value, 0.99, na.rm = TRUE),
skew_hint = case_when(
median < mean ~ "Right-skewed",
median > mean ~ "Left-skewed",
TRUE ~ "Roughly symmetric"
)
) |>
arrange(desc(abs(mean - median)))
make_skew_plot <- function(df, feature) {
v <- df[[feature]]
d <- data.frame(value = v)
m   <- mean(v, na.rm = TRUE)
med <- median(v, na.rm = TRUE)
sdv <- sd(v, na.rm = TRUE)
skew <- if (is.na(sdv) || sdv == 0) NA_real_ else 3 * (m - med) / sdv
dir  <- if (m > med) "Right-skewed" else if (m < med) "Left-skewed" else "Symmetric"
label <- if (is.na(skew)) dir else sprintf("%s\nSkew ≈ %.2f", dir, skew)
lines <- data.frame(
stat_type  = c("Mean", "Median"),
xintercept = c(m, med)
)
ggplot(d, aes(value)) +
geom_density(fill = "#4C78A8", alpha = 0.3) +
geom_vline(
data = lines,
aes(xintercept = xintercept, color = stat_type, linetype = stat_type),
size = 0.9
) +
annotate("text", x = Inf, y = Inf, label = label, hjust = 1.05, vjust = 1.3, size = 3.5) +
labs(title = paste("Skewness:", feature), x = NULL, y = NULL,
color = "Statistic", linetype = "Statistic") +
scale_color_manual(values = c(Mean = "red", Median = "blue")) +
scale_linetype_manual(values = c(Mean = "dashed", Median = "dotted")) +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom", plot.margin = margin(10, 20, 10, 10))
}
# Examples (separate plots):
p_age     <- make_skew_plot(df, "Age")
p_tenure  <- make_skew_plot(df, "Tenure")
p_monthly <- make_skew_plot(df, "MonthlyCharges")
p_total   <- make_skew_plot(df, "TotalCharges")
p_age; p_tenure; p_monthly; p_total
# Select the categorical features of interest
cat_features <- c("Gender", "PhoneService", "InternetService", "Contract")
cat_long_churn <- df_use %>%
select(Churn, all_of(cat_features)) %>%
pivot_longer(-Churn, names_to = "feature", values_to = "level") %>%
drop_na(level, Churn)
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "stack") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
labs(
title = "Categorical Balances by Churn (Counts)",
x = NULL, y = "Count", fill = "Churn"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Categorical Balances by Churn (Proportions)",
x = NULL, y = "Percent", fill = "Churn"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
library(tidyverse)
theme_set(theme_minimal(base_size = 12))
df <- read.csv("../data/processed/customer_churn_data_clean.csv")
# Drop index/ID columns; keep the rest from your schema
df_use <- df |>
select(-X, -CustomerID)  # keep Churn, Age, Tenure, PhoneService, InternetService, Contract, MonthlyCharges, TotalCharges
# Ensure churn is a factor with "No/Yes" levels per schema
df_use <- df_use |>
mutate(Churn = factor(Churn, levels = c("No","Yes")))
names(df)
num_cols <- df_use |>
select(where(is.numeric))
num_long <- num_cols |>
pivot_longer(everything(), names_to = "feature", values_to = "value")
ggplot(num_long, aes(value)) +
geom_histogram(bins = 30, fill = "#4C78A8", alpha = 0.85, color = "white") +
facet_wrap(~feature, scales = "free", ncol = 2) +
labs(
title = "Numberic Feature Distributions",
subtitle = "Age, Tenure, MonthlyCharges, TotalCharges",
x = NULL, y = "Count"
)
num_long_churn <- df_use |>
select(Churn, where(is.numeric)) |>
pivot_longer(-Churn, names_to = "feature", values_to = "value") |>
drop_na(value)
ggplot(num_long_churn, aes(value, fill = Churn)) +
geom_density(alpha = 0.35) +
facet_wrap(~feature, scale = "free", ncol = 2) +
labs(
title = "Numeric Densities by Churn",
x = NULL,
y = "Density",
fill = "Churn"
)
ggplot(num_long_churn, aes(x = Churn, y = value, fill = Churn)) +
geom_boxplot(outlier.alpha = 0.25, width = 0.7) +
facet_wrap(~ feature, scales = "free_y", ncol = 2) +
labs(title = "Numeric Spread & Outliers by Churn", x = NULL, y = NULL) +
guides(fill = "none")
cat_cols <- df_use |>
select(where(~ is.character(.x) || is.factor(.x))) |>
select(-Churn)  # analyze service mix separately from the label
cat_long <- cat_cols |>
mutate(across(everything(), ~ fct_lump_n(factor(.x), n = 8, other_level = "Other"))) |>
pivot_longer(everything(), names_to = "feature", values_to = "level") |>
drop_na(level)
ggplot(cat_long, aes(level)) +
geom_bar(fill = "#72B7B2") +
facet_wrap(~ feature, scales = "free_y", ncol = 2) +
coord_flip() +
labs(title = "Categorical Feature Counts", x = NULL, y = "Count")
cat_long_churn <- df_use |>
select(Churn, where(~ is.character(.x) || is.factor(.x))) |>
mutate(across(-Churn, ~ fct_lump_n(factor(.x), n = 6, other_level = "Other"))) |>
pivot_longer(-Churn, names_to = "feature", values_to = "level") |>
drop_na(level, Churn)
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_y", ncol = 2) +
coord_flip() +
scale_y_continuous(labels = scales::percent) +
labs(title = "Categorical Proportions by Churn", x = NULL, y = "Percent", fill = "Churn")
missing_df <- df_use |>
summarise(across(everything(), ~ sum(is.na(.)))) |>
pivot_longer(everything(), names_to = "feature", values_to = "n_missing") |>
mutate(pct = n_missing / nrow(df_use))
ggplot(missing_df, aes(reorder(feature, pct), pct)) +
geom_col(fill = "#E45756") +
coord_flip() +
scale_y_continuous(labels = scales::percent) +
labs(title = "Missing Values by Feature", x = NULL, y = "Percent Missing")
num_long |>
group_by(feature) |>
summarise(
n = sum(!is.na(value)),
mean = mean(value, na.rm = TRUE),
median = median(value, na.rm = TRUE),
sd = sd(value, na.rm = TRUE),
p99 = quantile(value, 0.99, na.rm = TRUE),
skew_hint = case_when(
median < mean ~ "Right-skewed",
median > mean ~ "Left-skewed",
TRUE ~ "Roughly symmetric"
)
) |>
arrange(desc(abs(mean - median)))
make_skew_plot <- function(df, feature) {
v <- df[[feature]]
d <- data.frame(value = v)
m   <- mean(v, na.rm = TRUE)
med <- median(v, na.rm = TRUE)
sdv <- sd(v, na.rm = TRUE)
skew <- if (is.na(sdv) || sdv == 0) NA_real_ else 3 * (m - med) / sdv
dir  <- if (m > med) "Right-skewed" else if (m < med) "Left-skewed" else "Symmetric"
label <- if (is.na(skew)) dir else sprintf("%s\nSkew ≈ %.2f", dir, skew)
lines <- data.frame(
stat_type  = c("Mean", "Median"),
xintercept = c(m, med)
)
ggplot(d, aes(value)) +
geom_density(fill = "#4C78A8", alpha = 0.3) +
geom_vline(
data = lines,
aes(xintercept = xintercept, color = stat_type, linetype = stat_type),
size = 0.9
) +
annotate("text", x = Inf, y = Inf, label = label, hjust = 1.05, vjust = 1.3, size = 3.5) +
labs(title = paste("Skewness:", feature), x = NULL, y = NULL,
color = "Statistic", linetype = "Statistic") +
scale_color_manual(values = c(Mean = "red", Median = "blue")) +
scale_linetype_manual(values = c(Mean = "dashed", Median = "dotted")) +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom", plot.margin = margin(10, 20, 10, 10))
}
# Examples (separate plots):
p_age     <- make_skew_plot(df, "Age")
p_tenure  <- make_skew_plot(df, "Tenure")
p_monthly <- make_skew_plot(df, "MonthlyCharges")
p_total   <- make_skew_plot(df, "TotalCharges")
p_age; p_tenure; p_monthly; p_total
# Select the categorical features of interest
cat_features <- c("Gender", "PhoneService", "InternetService", "Contract")
cat_long_churn <- df_use %>%
select(Churn, all_of(cat_features)) %>%
pivot_longer(-Churn, names_to = "feature", values_to = "level") %>%
drop_na(level, Churn)
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "stack") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
labs(
title = "Categorical Balances by Churn (Counts)",
x = NULL, y = "Count", fill = "Churn"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
ggplot(cat_long_churn, aes(level, fill = Churn)) +
geom_bar(position = "fill") +
facet_wrap(~ feature, scales = "free_x", ncol = 2) +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Categorical Balances by Churn (Proportions)",
x = NULL, y = "Percent", fill = "Churn"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
#| echo: false
df <- read.csv("../data/processed/customer_churn_data_clean.csv")
# Drop index/ID columns; keep the rest from your schema
df_use <- df |>
select(-X, -CustomerID)  # keep Churn, Age, Tenure, PhoneService, InternetService, Contract, MonthlyCharges, TotalCharges
# Ensure churn is a factor with "No/Yes" levels per schema
df_use <- df_use |>
mutate(Churn = factor(Churn, levels = c("No","Yes")))
names(df)
#| echo: false
df <- read.csv("../data/processed/customer_churn_data_clean.csv")
# Drop index/ID columns; keep the rest from your schema
df_use <- df |>
select(-X, -CustomerID)  # keep Churn, Age, Tenure, PhoneService, InternetService, Contract, MonthlyCharges, TotalCharges
# Ensure churn is a factor with "No/Yes" levels per schema
df_use <- df_use |>
mutate(Churn = factor(Churn, levels = c("No","Yes")))
names(df); head(df)
#| echo: false
make_skew_plot <- function(df, feature) {
v <- df[[feature]]
d <- data.frame(value = v)
m   <- mean(v, na.rm = TRUE)
med <- median(v, na.rm = TRUE)
sdv <- sd(v, na.rm = TRUE)
skew <- if (is.na(sdv) || sdv == 0) NA_real_ else 3 * (m - med) / sdv
dir  <- if (m > med) "Right-skewed" else if (m < med) "Left-skewed" else "Symmetric"
label <- if (is.na(skew)) dir else sprintf("%s\nSkew ≈ %.2f", dir, skew)
lines <- data.frame(
stat_type  = c("Mean", "Median"),
xintercept = c(m, med)
)
ggplot(d, aes(value)) +
geom_density(fill = "#4C78A8", alpha = 0.3) +
geom_vline(
data = lines,
aes(xintercept = xintercept, color = stat_type, linetype = stat_type),
linewidth = 0.9
) +
annotate("text", x = Inf, y = Inf, label = label, hjust = 1.05, vjust = 1.3, size = 3.5) +
labs(title = paste("Skewness:", feature), x = NULL, y = NULL,
color = "Statistic", linetype = "Statistic") +
scale_color_manual(values = c(Mean = "red", Median = "blue")) +
scale_linetype_manual(values = c(Mean = "dashed", Median = "dotted")) +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom", plot.margin = margin(10, 20, 10, 10))
}
# Examples (separate plots):
p_age     <- make_skew_plot(df, "Age")
p_tenure  <- make_skew_plot(df, "Tenure")
p_monthly <- make_skew_plot(df, "MonthlyCharges")
p_total   <- make_skew_plot(df, "TotalCharges")
p_age; p_tenure; p_monthly; p_total
